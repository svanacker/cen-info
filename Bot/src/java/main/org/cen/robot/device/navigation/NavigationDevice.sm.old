%{
%}

%class NavigationDevice
%package org.cen.robot.device.navigation
%access public

%start NavigationFSM::StateStanding
%map NavigationFSM
%%
StateStanding
{
	NewPosition(request: NavigationRequest)
		StateMoving
		{
			setRequest(request);
			sendData();
		}
	ReadPosition
		StateMoving
		{
		}
}

StateMoving
{
	CollisionDetected
		StateCollision
		{
		}
	PositionReached
		StateReached
		{
		}
	Stop
		StateStopped
		{
		}
}

StateCollision
	Entry
	{
		setCollision();
	}
{
	Next
		StateStanding
		{
		}
}

StateInterrupted
	Entry
	{
		setInterrupted();
	}
{
	Next
		StateStanding
		{
		}
}

StateStopped
	Entry
	{
		setStopped();
	}
{
	Next
		StateStanding
		{
		}
}

StateReached
	Entry
	{
		setReached();
		notifyResult();
	}
{
	Next
		StateStanding
		{
		}
}

Default
{
	Restart
		StateStanding
		{
			notifyRestart();
		}
	Default
		nil
		{
			unhandled();
		}
}
%%